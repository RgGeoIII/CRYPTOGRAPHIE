from scapy.all import sniff, TCP, IP
from scapy.layers.http import HTTPRequest  # Import du module HTTPRequest pour analyser les requêtes HTTP

# Fonction de détection du trafic HTTP
def detect_http(packet):
    if packet.haslayer(HTTPRequest):
        # Récupère l'IP source et destination
        ip_src = packet[IP].src
        ip_dst = packet[IP].dst

        # Récupère le type de requête (GET, POST, etc.)
        http_method = packet[HTTPRequest].Method.decode()

        # URL demandée
        host = packet[HTTPRequest].Host.decode()
        path = packet[HTTPRequest].Path.decode()
        url = f"http://{host}{path}"

        # Affiche l'alerte dans le terminal
        print(f"[ALERTE] {http_method} Requête HTTP détectée : {url} (Source : {ip_src} -> Destination : {ip_dst})")

        # Enregistre les détails dans un fichier log
        with open("http_logs.txt", "a") as log_file:
            log_file.write(f"[ALERTE] {http_method} Requête HTTP : {url} (Source : {ip_src} -> Destination : {ip_dst})\n")

        # Si la requête est POST, affiche le contenu (données envoyées)
        if http_method == "POST" and packet.haslayer(TCP) and packet[TCP].payload:
            print("[Données POST] :")
            print(packet[TCP].payload)
            with open("http_logs.txt", "a") as log_file:
                log_file.write(f"[Données POST] : {packet[TCP].payload}\n")

# Sniffer le trafic HTTP sur le port 80
print("[INFO] Sniffer le trafic HTTP sur le port 80...")
sniff(filter="tcp port 80", prn=detect_http, store=0)
